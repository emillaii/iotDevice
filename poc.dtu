function 	
	local taskname="userTask"
	log.info(taskname,"start")
	sys.wait(30000)
	local netid =1
	local netmsg ="UART_DATA_TO_NET"..netid
	local uid=2
	local uartmsg ="UART"..uid.."_NEED_SEND"
	local rd=nil
	local cmd={
		{0x01,0x03,0x00,0x00,0x00,0x05,0x85,0xC9},
                {0x68,0x61,0x57,0x85,0x09,0x03,0x24,0x68,0x11,0x04,0x33,0x34,0x35,0x35,0x23,0x16},
                {0x68,0x61,0x57,0x85,0x09,0x03,0x24,0x68,0x11,0x04,0x33,0x34,0x34,0x35,0x22,0x16},
                {0x68,0x61,0x57,0x85,0x09,0x03,0x24,0x68,0x11,0x04,0x33,0x34,0x36,0x35,0x24,0x16}
	}
	local ncmd=nil
	local crcr=nil
	prouart.ProuartStopProReciveCache(1)
	pronet.PronetStopProNetRecive(1)

        local iccid = sim.getIccid()
	local imei=misc.getImei()

	while true do
		local temp1=0
		local hum1=0
                local curr = 0
                local volt = 0
                local pow = 0
		local temp2=0
		local hum2=0 
		
		while true do 
			rd = prouart.ProuartGetReciveChaceAndDel(uid)
			if rd ==nil then 
				break
			end 
		end
		
		for i=1,#cmd,1 do 

                        local retry_count = 0
                        local max_retries = 10
                        rd = nil

			while retry_count < max_retries and rd == nil do
                            ncmd=usertool.ToolTableToHexStr(cmd[i])
			    prouart.ProuartSetSendChace(uid,ncmd)
			    sys.publish(uartmsg)
			    sys.wait(1000)
			    rd = prouart.ProuartGetReciveChaceAndDel(uid)
                            if rd == nil then
                                   retry_count = retry_count + 1
                                   sys.wait(1000)
                            end
                        end 
                        if rd == nil then 
                            log.info(taskname, "Failed to receive data after", max_retries, "retries")
                        end 
			if rd then 
				log.info(taskname,"cmd num=",i,"rd data=",string.toHex(rd))
				rd = usertool.ToolHexStrToTable(rd)
				if rd then 
					crcr = usertool.ToolCheckModbusCRC16(rd, #rd,0)
					if crcr == 1 then 
						if i ==1 then
							temp1 = (rd[4]*256+rd[5])*0.1
							hum1 = (rd[6]*256+rd[7])*0.1
						end 	
					end 			
					if i ==2 then 
                                                local hex_str_19 = string.format("%X", rd[19]-0x33)  
                                                local hex_str_20 = string.format("%X", rd[20]-0x33) 
                                                local hex_str_21 = string.format("%X", rd[21]-0x33)  
                                                local concatenated_str = hex_str_21 .. hex_str_20 .. hex_str_19
                                                log.info(taskname, "concate str:", concatenated_str )
                                                local decimal_value = tonumber(concatenated_str, 10)
                                                log.info(taskname, "current decimal_value :", decimal_value )
						curr= ( decimal_value )*0.001 
					end		
                                        if i ==3 then
                                                local hex_str_19 = string.format("%X", rd[19]-0x33) 
                                                local hex_str_20 = string.format("%X", rd[20]-0x33)  
                                                local concatenated_str = hex_str_20 .. hex_str_19
                                                log.info(taskname, "concate str:", concatenated_str )
                                                local decimal_value = tonumber(concatenated_str, 10)
                                                log.info(taskname, "volt decimal_value :", decimal_value )
						volt= ( decimal_value )*0.1 
                                        end
                                        if i ==4 then
                                                local hex_str_19 = string.format("%X", rd[19]-0x33)  
                                                local hex_str_20 = string.format("%X", rd[20]-0x33) 
                                                local hex_str_21 = string.format("%X", rd[21]-0x33)  
                                                local concatenated_str = hex_str_21 .. hex_str_20 .. hex_str_19
                                                log.info(taskname, "concate str:", concatenated_str )
                                                local decimal_value = tonumber(concatenated_str, 10)
                                                log.info(taskname, "pow decimal_value :", decimal_value )
						pow= ( decimal_value )*0.0001
                                        end
				end					 
			end 
		 end 
	 
		local d={}
		d.imei=imei
		d.iccid=iccid
		d.datas={}
		d.datas.temp1=temp1
		d.datas.hum1=hum1
		d.datas.curr=curr
		d.datas.volt=volt 
                d.datas.pow=pow
		local restr=json.encode(d)							
		log.info("taskname.json",restr)
		if restr then 
			if 1==pronet.PronetGetNetState(netid) then 
				pronet.PronetInsertSendChache(netid,restr)
				sys.publish(netmsg)
			end 
		end 						
		sys.wait(60000*15)
	end
end